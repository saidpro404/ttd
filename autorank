-- Wait until game loaded then start the whole script.
repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local player = Players.LocalPlayer
repeat task.wait() until not player.PlayerGui:FindFirstChild("__INTRO")

-- Services / Helpers path - more tidy and fast ig/
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local InstancingCmds = require(ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client"):WaitForChild("InstancingCmds"))
local EggCmds = require(ReplicatedStorage.Library.Client.EggCmds)
local Network = require(ReplicatedStorage.Library.Client.Network)
local GetMaxEggsToHatch = EggCmds.GetMaxHatch()

-- Remotes
local Train = ReplicatedStorage.Network:WaitForChild("InfiniteGym_Train")
local Start = ReplicatedStorage.Network:WaitForChild("InfiniteGym_Start")
local ZonePurchase = ReplicatedStorage.Network:WaitForChild("InstanceZones_RequestPurchase")
local GymRebirth = ReplicatedStorage.Network:WaitForChild("Gym_Rebirth")

-- Removing egg animation
local EggScript = player.PlayerScripts:WaitForChild("Scripts"):WaitForChild("Game"):WaitForChild("Egg Opening Frontend")
getsenv(EggScript).PlayEggAnimation = function() return end

-- Enter gym event
local function EnterGymEvent()
    setthreadidentity(2)
    pcall(function()
        InstancingCmds.Enter("GymEvent")
    end)
    setthreadidentity(7)
end

EnterGymEvent()
task.wait(3)

-- Auto buy all zones
task.spawn(function()
    while true do
        for Zones = 1, 5 do
            pcall(function()
                ZonePurchase:InvokeServer("GymEvent", Zones)
            end)
        end
        task.wait(1)
    end
end)

-- Auto rebirth
task.spawn(function()
    while true do
        pcall(function()
            GymRebirth:InvokeServer()
        end)
        task.wait(1)
    end
end)


-- Auto start (start infinite mode)
task.spawn(function()
    while true do
        pcall(function()
            Start:InvokeServer()
        end)
        task.wait()
    end
end)

-- Auto train
task.spawn(function()
    while true do
        pcall(function()
            Train:InvokeServer("Squat")
        end)
        task.wait()
    end
end)

-- Find nearest egg
local function find_nearest_egg()
    local nearestEgg, nearestDistance = nil, math.huge
    local eggsFolder = workspace.__THINGS:FindFirstChild("CustomEggs")
    if not eggsFolder then return nil end

    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end

    for _, eggModel in ipairs(eggsFolder:GetChildren()) do
        if eggModel:IsA("Model") then
            local success, cframe = pcall(function()
                return eggModel:GetBoundingBox()
            end)
            if success and cframe then
                local dist = (hrp.Position - cframe.Position).Magnitude
                if dist < nearestDistance then
                    nearestEgg = eggModel.Name
                    nearestDistance = dist
                end
            end
        end
    end

    return nearestEgg
end

-- Auto hatch nearest egg
_G.AutoOpen = true
task.spawn(function()
    while task.wait() do
        if _G.AutoOpen then
            local nearestEgg = find_nearest_egg()
            if nearestEgg then
                pcall(function()
                    Network.Invoke("CustomEggs_Hatch", nearestEgg, GetMaxEggsToHatch)
                end)
            end
        end
    end
end)
