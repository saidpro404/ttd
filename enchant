task.spawn(function() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/FnDXueyi/roblog/refs/heads/main/status.lua", true))()
end)

getgenv().ConfigsKaitun = {
	Beta_Fix_Data_Sync = false,

	NoDeletePlayer = true,

	["Block Pet Gift"] = false,

	Collect_Cooldown = 90, -- cooldown to collect fruit

	["Low Cpu"] = true,
	["Auto Rejoin"] = false,

	["Rejoin When Update"] = true,

	["Auto Trade Pet"] = { -- not done yet bro dont use
		["Enabled"] = false, 
		["Target"] =  { -- multi users
			"username1",
			"username2",
		},
		["Pet To Send"] = {
			
		}
	},

	["Limit Tree"] = {
		["Limit"] = 400,
		["Destroy Until"] = 400,

		["Safe Tree"] = {
			"Moon Blossom",
			"Bone Blossom",
			"Moon Melon",
			"Maple Apple",
			"Moon Mango",
			"Dragon Pepper",
			"Elephant Ears",
			"Fossilight",
			"Princess Thorn",
			-- for the event
			Bamboo = 4,
			Coconut = 15,
			Mushroom = 4,
			Glowthorn = 4,
			Tomato = 15,
			Pumpkin = 4,
			Pepper = 4,
			Cacao = 15,
			Apple = 15,
			Romanesco = 4,
			["Elder Strawberry"] = 4,
			["Burning Bud"] = 4,
			["Giant Pinecone"] = 4,
			Corn = 4,
			["Sugar Apple"] = 4,
			["Ember Lily"] = 4,
			["Dragon Fruit"] = 15,
			Sunbulb = 8,
			["Orange Tulip"] = 4,
			Blueberry = 15,
			Watermelon = 4,
			Mango = 15,
			Cactus = 4,
			Strawberry = 15,
			Beanstalk = 4,
			Lightshoot = 4,
			Grape = 4,
			Daffodil = 4,
		}
	},

	Seed = {
		Buy = {
			Mode = "Auto", -- Custom , Auto
			Custom = { -- any seed u need to buy
				"Carrot",
			}
		},
		Place = {
			Mode = "Lock", -- Select , Lock
			Select = {
				"Carrot"
			},
			Lock = {
				"Maple Apple",
				"Sunflower",
				"Dragon Pepper",
				"Elephant Ears",
				"Moon Melon",
				"Easter Egg",
				"Moon Mango",
				"Bone Blossom",
				"Fossilight",
			}
		}
	},

	["Seed Pack"] = {
		Locked = {
			["Enchanted Seed Packs"] = 10,
		}
	},

	Events = {
		["Fall Event"] = {
			Minimum_Money = 10_000_000, -- minimum money to start play this event
		},
		["Fairy Event"] = {
			Minimum_Money = 10_000_000, -- minimum money to start play this event
			Rewards_Item = { -- top mean select first
				"Enchanted Seed Pack",
				"Pet Shard Glimmering",
				"Enchanted Egg",
				"Mutation Spray Glimmering",
				"FairyPoints",
				"Fairy Targeter",
			},
			Upgrade = {
				Mode = "Order", -- Order (mean will up on order), Chepest, Highest
				Order = { -- top upgrade first, not put mean not upgrade
					"Fairy Spawn Amount",
					"Loose Fairy Spawn Amount",
					"Glimmer Multiplier",
					"Fairy Event Duration",
				},
				Limit = {
					["Glimmer Multiplier"] = 5, -- max 10
					["Loose Fairy Spawn Amount"] = 10, -- max 10
					["Fairy Event Duration"] = 10, -- max 10
					["Fairy Spawn Amount"] = 9, -- max 9
				}
			},
			
			Minimum_Fairy_Point_Restock = 10000, -- if fairy point more then this will restock
			Catch_Fairy_Before_Restock = 51, -- fr it 50 but to be sure i put 51
		},
		MaxMoney_Restocks = 10_000_000,
		
		Shop = { -- un comment to buy
			"Fall Egg",

			"Enchanted Chest",
			"Pet Shard Glimmering",
			"Enchanted Egg",
			"Enchanted Seed Pack",
			-- "Drake",
			"Pixie Faern",
			"Untold Bell",
			"Luminous Sprite",
			"Mutation Spray Luminous",
			"Luminous Wand",

			"Sprout Seed Pack",
			"Sprout Egg",
			-- "Mandrake",
			"Silver Fertilizer",
			-- "Canary Melon",
			-- "Amberheart",
			["Spriggan"] = 8,
			-- Friend Shop
			"Skyroot Chest",
			"Pet Shard GiantBean",
		},
		["Traveling Shop"] = {
			"Bee Egg",
			"Paradise Egg", 
			"Rare Summer Egg", 
			"Common Summer Egg"
		},
		Craft = {
			"Enchanted Chest",
			"Fairy Net",
			"Enchanted Egg",
			"Enchanted Seed Pack",
			"Anti Bee Egg",
			"Pet Shard GiantBean",
			"Sprout Egg",
		},
		Start_Do_Honey = 2_000_000 -- start trade fruit for honey at money
	},

	Gear = {
		Buy = { 
			"Master Sprinkler",
			"Godly Sprinkler",
			"Advanced Sprinkler",
			"Basic Sprinkler",
			"Lightning Rod",
			"Level Up Lollipop",
			"Medium Treat",
			"Medium Toy",
			"Harvest Tool",
		},
		Lock = {
			"Master Sprinkler",
			"Godly Sprinkler",
			"Advanced Sprinkler",
			"Basic Sprinkler",
			"Lightning Rod",
		},
	},

	Eggs = {
		Place = {
			"Fall Egg",
			"Sprout Egg",
			"Gourmet Egg",
			"Zen Egg",
			"Primal Egg",
			"Dinosaur Egg",
			"Oasis Egg",
			"Anti Bee Egg",
			"Night Egg",
			"Bug Egg",
			"Paradise Egg",
			"Bee Egg",
			"Rare Summer Egg",
			"Mythical Egg",
			"Common Egg",
		},
		Buy = {
			"Bee Egg",
			"Oasis Egg",
			"Paradise Egg",
			"Anti Bee Egg",
			"Night Egg",
			"Rare Summer Egg",
			"Bug Egg",
			"Mythical Egg",
			"Uncommon Egg",
			"Common Egg",
		}
	},

	Pets = {
		["Auto Feed"] = true,

		MutationPet = {
			["PET NAME"] = { "Glimmering","... any other" }
		},

		["Start Delete Pet At"] = 40,
		["Upgrade Slot"] = {
			["Pet"] = {
				["Starfish"] = { 1, 100, 7 , true }, -- the "true" on the last is auto equip (use for like only need to use for upgrade pet)
			},
			["Limit Upgrade"] = 5, -- max is 5 (more than or lower than 1 will do nothing)
			["Equip When Done"] = {
				["Tarantula Hawk"] = { 1, 100, 1 },
				["Sunny-Side Chicken"] = { 4, 100, 2 }, 
				["Hotdog Daschund"] = { 4, 100, 3 },
				["Blood Kiwi"] = { 8, 100, 4 },
				["Rooster"] = { 8, 100, 5 },
				["Starfish"] = { 1, 100, 6 },
			},
		},
		Unfavorite_AllPet = false,
		Favorite_LockedPet = false,
		Locked_Pet_Age = 60, -- pet that age > 60 will lock
		Locked = {
			"Swan",
			"Barn Owl",
			"Phoenix",
			["Shroomie"] = 2,
			["Drake"] = 2,
			["Luminous Sprite"] = 2,
			"Griffin",
			["Glimmering Sprite"] = 5,
			"Cockatrice",
			"Golem",
			"Gnome",
			"Green Bean", 
			"Apple Gazelle", 
			"Lemon Lion", 
			"Peach Wasp",
			"Golden Goose",
			["Spriggan"] = 5,
			["Gorilla Chef"] = 4,
			"Junkbot",
			"Hotdog Daschund",
			"Sunny-Side Chicken",
			"Lobster Thermidor",
			"French Fry Ferret",
			["Starfish"] = 8,
			"Raiju",
			"Corrupted Kodama",
			["Rooster"] = 4,
			"Capybara",
			["Koi"] = 2,
			["Tanchozuru"] = 3,
			["Moth"] = 3, 
			"Kitsune",
			"Corrupted Kitsune",
			"Dilophosaurus",
			"Spinosaurus",
			"Brontosaurus",
			"T-Rex",
			"Fennec Fox",
			"Blood Kiwi",
			["Hamster"] = 2,
			"Disco Bee",
			"Raccoon",
			"Queen Bee",
			"Dragonfly",
			"Butterfly",
			"Tarantula Hawk",
			"Wasp",
			["Honey Bee"] = 5,
			["Bee"] = 5,
			"Mimic Octopus",
			"Red Fox",
			"Chicken Zombie"
		},
		LockPet_Weight = 5, -- if Weight >= 10 they will locked
		Ignore_Pet_Weight = {
			"Cardinal",
		},
		Instant_Sell = {
			"Cardinal",
			"Ladybug",
			"Pixie",
			"Imp",
			"Shroomie",
		}
	},
	Webhook = {
		UrlPet = "https://discord.com/api/webhooks/1305948515234742362/S6IwN-9JA-jpemtbv5GUCTyTlzhA5rpH6ac7JrVMQQid8ieYlxEZ46IYyHDQG0hlOAA2",
		UrlSeed = "xxx",
		PcName = "god",

		Mention = "474925167886336001", -- discord id

		Noti = {
			Seeds = {
				"Sunflower",
				"Dragon Pepper",
				"Elephant Ears",
			},
			SeedPack = {
				"Idk"
			},
			Pets = {
				"Swan",
				"Phoenix",
				"Golden Goose",
				"French Fry Ferret",
				"Cockatrice",
				"Kitsune",
				"Spinosaurus",
				"T-Rex",
				"Disco Bee",
				"Butterfly",
				"Mimic Octopus",
				"Queen Bee",
				"Fennec Fox",
				"Dragonfly",
				"Raccoon",
				"Red Fox",
			},
			Pet_Weight_Noti = true,
		}
	},
}
License = "rArFHz2PIoe3oLPKHem8gfjehPKwrIJX"

loadstring(game:HttpGet('https://raw.githubusercontent.com/Real-Aya/Loader/main/Init.lua'))()
Wait (4)
local Rep = game:GetService("ReplicatedStorage")

task.spawn(function()
    while task.wait(1) do -- ch·ªù 1 gi√¢y gi·ªØa c√°c l·∫ßn mua (ƒë·ªÉ tr√°nh kick)
        local args = {
            [1] = "Fall Egg", -- thay b·∫±ng item b·∫°n mu·ªën
            [2] = 3,           -- s·ªë l∆∞·ª£ng m·ªói l·∫ßn
        }
        Rep.GameEvents.BuyEventShopStock:FireServer(unpack(args))
        print("üõí ƒê√£ mua:", args[1])
    end
end)
local Players = game:GetService('Players')
local Rep = game:GetService('ReplicatedStorage')
local CollectionService = game:GetService('CollectionService')

local localPlayer = Players.LocalPlayer
local CollectRemote = Rep.GameEvents.Crops.Collect
local SubmitAllRemote = Rep.GameEvents.FallMarketEvent.SubmitAllPlants

-- ‚öôÔ∏è Delay v√† qu√©t
local USE_FARM_ONLY = true
local FIRE_DELAY = 1
local INTERVAL = 10

-- üìÇ Farm folder
local farmFolder
pcall(function()
    if
        workspace:FindFirstChild('Farm')
        and workspace.Farm:FindFirstChild('Farm')
    then
        farmFolder = workspace.Farm.Farm
    end
end)

-- üè∑Ô∏è C√°c lo·∫°i c√¢y c·∫ßn thu ho·∫°ch
local targetCrops = {
    ['Mushroom'] = true,
    ['Glowthorn'] = true,
    ['Pepper'] = true,
    ['Cacao'] = true,
    ['Apple'] = true,
    ['Wispwing'] = true,
    ['Romanesco'] = true,
    ['Elder Strawberry'] = true,
    ['Burning Bud'] = true,
    ['Giant Pinecone'] = true,
    ['Corn'] = true,
    ['Sugar Apple'] = true,
    ['Ember Lily'] = true,
    ['Dragon Fruit'] = true,
    ['Sunbulb'] = true,
    ['Orange Tulip'] = true,
    ['Mango'] = true,
    ['Cactus'] = true,
    ['Beanstalk'] = true,
    ['Lightshoot'] = true,
    ['Grape'] = true,
    ['Daffodil'] = true,
    ['Aurora Vine'] = true,
    ['Grand Tomato'] = true,
    ['Maple Apple'] = true,
    ['Princess Thorn'] = true,
    ['Spiked Mango'] = true,
    ['Pineapple'] = true,
    ['King Cabbage'] = true,
    ['Carnival Pumpkin'] = true,
    ['Kniphofia'] = true,
    ['Golden Peach'] = true,
    ['Maple Resin'] = true,
}

-- üè∑Ô∏è Ki·ªÉm tra tag thu ho·∫°ch
local function hasCollectTag(obj)
    if type(obj.HasTag) == 'function' then
        local ok, res = pcall(function()
            return obj:HasTag('CollectPrompt')
        end)
        if ok then
            return res
        end
    end
    return CollectionService:HasTag(obj, 'CollectPrompt')
end

-- üå± Thu ho·∫°ch v√† n·ªôp ngay sau m·ªói l·∫ßn
local function harvestAndSubmit()
    local descendants = USE_FARM_ONLY and farmFolder:GetDescendants()
        or workspace:GetDescendants()

    for _, inst in ipairs(descendants) do
        if inst:IsA('ProximityPrompt') and hasCollectTag(inst) then
            local crop = inst.Parent and inst.Parent.Parent
            if crop and targetCrops[crop.Name] then
                -- Thu ho·∫°ch
                CollectRemote:FireServer({ crop })
                task.wait(FIRE_DELAY)

                -- N·ªôp ngay sau khi thu ho·∫°ch c√¢y n√†y
                SubmitAllRemote:FireServer()
            end
        end
    end
end

-- üîÑ Loop
while task.wait(INTERVAL) do
    harvestAndSubmit()
end
